# Generated by Django 4.2.16 on 2024-12-18 08:53

from django.db import migrations, models
import django.db.models.deletion
import idvalid_core.generators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subid', models.CharField(blank=True, db_column='subid', default=idvalid_core.generators.default_subid_generator, editable=False, help_text='Primary key shown to user.', max_length=64, null=True, unique=True, verbose_name='subid')),
                ('platform_id', models.PositiveIntegerField(help_text='Save platform id from authn service.', unique=True, verbose_name='platform id')),
                ('name', models.CharField(max_length=150, verbose_name='name')),
                ('platform_type', models.CharField(max_length=32, verbose_name='platform type')),
                ('is_deleted', models.BooleanField(default=False, editable=False, verbose_name='deleted flag')),
                ('deleted_time', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='deleted time')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.PositiveIntegerField(help_text='User id from authn service.', verbose_name='user id')),
                ('name', models.CharField(max_length=256, verbose_name='name')),
                ('device_id', models.CharField(max_length=64, verbose_name='device id')),
                ('device_property', models.JSONField(blank=True, help_text='More detail device properties.', null=True, verbose_name='device property')),
                ('registered_at', models.DateTimeField(help_text='Registered date for the first time.', verbose_name='registered at')),
                ('last_login', models.DateTimeField(help_text='Last login date to this device.', verbose_name='last login')),
                ('is_revoked', models.BooleanField(db_index=True, default=False, help_text='Revoked session status.', verbose_name='revoked status')),
                ('revoked_time', models.DateTimeField(blank=True, null=True, verbose_name='revoked time')),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='device.platform', verbose_name='platform')),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subid', models.CharField(blank=True, db_column='subid', default=idvalid_core.generators.default_subid_generator, editable=False, help_text='Primary key shown to user.', max_length=64, null=True, unique=True, verbose_name='subid')),
                ('user_id', models.PositiveIntegerField(help_text='User id from authn service.', verbose_name='user id')),
                ('name', models.CharField(max_length=256, verbose_name='name')),
                ('device_id', models.CharField(max_length=64, verbose_name='device id')),
                ('device_property', models.JSONField(blank=True, help_text='More detail device properties.', null=True, verbose_name='device property')),
                ('registered_at', models.DateTimeField(help_text='Registered date for the first time.', verbose_name='registered at')),
                ('last_login', models.DateTimeField(help_text='Last login date to this device.', verbose_name='last login')),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='device.platform', verbose_name='platform')),
            ],
            options={
                'unique_together': {('user_id', 'device_id')},
            },
        ),
    ]
