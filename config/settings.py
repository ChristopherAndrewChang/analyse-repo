"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.2.14.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from datetime import timedelta

from corsheaders.defaults import default_methods, default_headers


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-^jew0&4ry(p1st!n4a6q2&hk!cxtwg7p7vh@n5b9ka(5+z!smy'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['idval.id', '127.0.0.1', 'localhost', '*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'corsheaders',
    'rest_framework',
    'django_grpc',

    # 'crypto',
    # 'enrollment',
    'otp',
    # 'account',
    # 'profile',
    'authn',
    'device',
    'tenant',
    'rbac',

    # oauth
    'oauth',
    'oauth2_provider',

    # firebase
    'firebase',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Auth backend
# https://docs.djangoproject.com/en/4.2/ref/settings/#std-setting-AUTHENTICATION_BACKENDS

AUTHENTICATION_BACKENDS = ("authn.backends.AuthBackend",)


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 9
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'authn.password_validation.ContainsLowerCaseValidator',
    },
    {
        'NAME': 'authn.password_validation.ContainsUpperCaseValidator',
    },
    {
        'NAME': 'authn.password_validation.ContainsNumberValidator',
    },
    {
        'NAME': 'authn.password_validation.ContainsNonWordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = 'static/'


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Secure proxy SSl header
# https://docs.djangoproject.com/en/4.2/ref/settings/#secure-proxy-ssl-header

SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")


# Use X-Forwarded-Host
# https://docs.djangoproject.com/en/4.2/ref/settings/#use-x-forwarded-host

USE_X_FORWARDED_HOST = True


# Use X-Forwarded-Port
# https://docs.djangoproject.com/en/4.2/ref/settings/#use-x-forwarded-port

USE_X_FORWARDED_PORT = True


# Email sender
# https://docs.djangoproject.com/en/4.2/topics/email/

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.example.com'
EMAIL_PORT = 587  # Port for TLS
EMAIL_USE_TLS = True  # Use TLS
EMAIL_HOST_USER = 'your_email@example.com'
EMAIL_HOST_PASSWORD = 'your_email_password'
DEFAULT_FROM_EMAIL = 'your_email@example.com'


#
#

AUTH_USER_MODEL = "authn.User"


#
#

LOGIN_URL = "/admin/login/"


# CORS
#

CORS_ALLOWED_ORIGINS = [
    'http://localhost:3000',
]
CORS_ALLOW_METHODS = default_methods
CORS_ALLOW_HEADERS = default_headers + (
    "X-Idv-Slt",
    "X-Idv-Pf",
    "X-Idv-Ts",
    "X-Idv-Nc",
    "X-Idv-Tfa",
    "X-Idv-Fbt",
)
CORS_ALLOW_CREDENTIALS = True


# Oauth Provider (oauth service)
# https://django-oauth-toolkit.readthedocs.io/en/3.0.1/settings.html

OAUTH2_PROVIDER_APPLICATION_MODEL = "oauth.Application"
OAUTH2_PROVIDER_GRANT_MODEL = "oauth.Grant"
OAUTH2_PROVIDER_ACCESS_TOKEN_MODEL = "oauth.AccessToken"
OAUTH2_PROVIDER_REFRESH_TOKEN_MODEL = "oauth.RefreshToken"
OAUTH2_PROVIDER_ID_TOKEN_MODEL = "oauth.IDToken"
OAUTH2_PROVIDER = {
    "APPLICATION_ADMIN_CLASS": "oauth.admin.ApplicationAdmin",
    "ACCESS_TOKEN_ADMIN_CLASS": "oauth.admin.AccessTokenAdmin",
    "GRANT_ADMIN_CLASS": "oauth.admin.GrantAdmin",
    "ID_TOKEN_ADMIN_CLASS": "oauth.admin.IDTokenAdmin",
    "REFRESH_TOKEN_ADMIN_CLASS": "oauth.admin.RefreshTokenAdmin",

    "OAUTH2_VALIDATOR_CLASS": "oauth.oauth_validators.OAuth2Validator",

    "ALLOWED_REDIRECT_URI_SCHEMES": ["http", "https"],
    "ALLOWED_SCHEMES": ["http", "https"],

    "SCOPES": {
        "openid": "OpenID Connect scope",
    },

    "OIDC_ENABLED": True,
    "OAUTH2_SERVER_CLASS": "oauth.oidc_server.Server",
    "OIDC_RSA_PRIVATE_KEY": "test_rsa_private_key.pem",
    "OIDC_ISS_ENDPOINT": "http://localhost:8000/oauth"
}


# Celery
#

CELERY_BROKER_URL = (
    # protocol
    'amqp://'  
    # user
    'guest:'
    # password
    'guest@'
    # host
    'localhost:'
    # post
    '5672/'
    # vhost
    'insightnz'
)
CELERY_BROKER_HEARTBEAT = 60
CELERY_BROKER_POOL_LIMIT = 20
CELERY_BROKER_CONNECTION_TIMEOUT = 10
CELERY_TIMEZONE = 'UTC'
CELERY_TASK_TRACK_STARTED = True
# CELERY_RESULT_BACKEND = django-db
# CELERY_CACHE_BACKEND = django-cache
CELERY_RESULT_SERIALIZER = 'msgpack'
CELERY_RESULT_COMPRESSION = 'gzip'
CELERY_RESULT_ACCEPT_CONTENT = ['application/x-msgpack']
CELERY_TASK_SERIALIZER = 'msgpack'
CELERY_TASK_COMPRESSION = 'gzip'
CELERY_ACCEPT_CONTENT = ['application/x-msgpack']
CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'evercore_jwt_auth.rest_framework.authentication.JWTStatelessUserAuthentication',
    )
}


SIMPLE_JWT = {
    "TOKEN_REFRESH_SERIALIZER": "authn.rest.auth.serializers.TokenRefreshSerializer",
}


IDVALID_AUTH_SETTINGS = {
    "SECURITY_PLATFORM_LABEL_HEADER": "X-Idv-Slt",
    "SECURITY_PLATFORM_ID_HEADER": "X-Idv-Pf",
    "SECURITY_TIMESTAMP_HEADER": "X-Idv-Ts",
    "SECURITY_NONCE_HEADER": "X-Idv-Nc",
    "SECURITY_2FA_HEADER": "X-Idv-Tfa",
    "PASSKEY_ALLOWED_ORIGIN": ("localhost",),
}


EVERCORE_JWT_AUTH_SETTINGS = {
    "ISSUER": "IDValid",

    "AUTH_TOKEN_CLASSES": (
        "authn.tokens.AccessToken",
    ),

    "REFRESH_TOKEN_LIFETIME": timedelta(days=30),
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=30),
    "ACCESS_TOKEN_CLASS": "authn.tokens.AccessToken",
    "REFRESH_TOKEN_CLASS": "authn.tokens.RefreshToken",
}


GRPCSERVER = {
    'servicers': ['config.handlers.grpc_handlers'],
    'interceptors': ['evercore_grpc.interceptors.UnimplementedInterceptor']
}

IDVALID_INTEGRATION_SETTINGS = {
    "CRYPTOGRAPHY_GRPC": "localhost:50051",
    "OTP_GRPC": "localhost:50051",
    "ENROLLMENT_GRPC": "localhost:50051",
    "AUTHN_GRPC": "localhost:50051",
}

IDVALID_OTP_SETTINGS = {
    "DEFAULT_PIN_LENGTH": 6
}

IDVALID_FIREBASE_SETTINGS = {
    "KEY_JSON_FILE": "",
}
